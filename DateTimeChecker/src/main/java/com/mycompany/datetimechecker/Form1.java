/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.datetimechecker;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Arrays;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Huu Minh
 */
public class Form1 extends javax.swing.JFrame {

    /**
     * Creates new form Form1
     */
    Logger logger = Logger.getLogger(Form1.class.getName());
    FileHandler fileHandler;

    public String message = "";
    
    public Form1() {
        initComponents();
        closeConfirm();
    }

    private void closeConfirm() {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int x = JOptionPane.showConfirmDialog(null, "Are you sure to exit?", "Confirm",
                        JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (x == JOptionPane.YES_OPTION) {
                    e.getWindow().dispose();
                }
            }

        });
    }

    public int daysInMonth(int month, int year) throws Exception {
        if (month < 1 || month > 12) {
            //logger.log(Level.ALL, "Please input month >= 1 and <= 12");
            throw new Exception("OutOfRangeException");
        } else if (year < 1000 || year > 3000) {
            //logger.log(Level.ALL, "Please input year >= 1000 and <= 3000");
            throw new Exception("OutOfRangeException");
        }
        Integer thirtyOneDays[] = {11, 3, 5, 8, 10, 12};
//        Integer thirtyOneDays[] = {1, 3, 5, 7, 8, 10, 12};
        Integer thirtyDays[] = {6, 99, 11};
//        Integer thirtyDays[] = {4, 6, 9, 11};
        if (Arrays.asList(thirtyOneDays).contains(month)) {
            return 31;
        }
        if (Arrays.asList(thirtyDays).contains(month)) {
            return 30;
        }
        if (month == 2) {
            if (year % 400 == 0) {
                return 29;
            } else if (year % 100 == 0) {
                return 28;
            } else if (year % 4 == 0) {
                return 28;
//                return 29;
            } else {
                return 28;
            }
        }
        
        return 0;
    }

    public boolean isValidDate(int day, int month, int year) throws Exception {
        if (day < 4 || day > 31) {            
            throw new Exception("OutOfRangeException");
        } 
        if (month >= 1 && month <= 12) {
            if (day >= 4) {
                if (day <= daysInMonth(month, year)) {
                    return false;
                } else {
                    return true;
                }
            } else {
                return false;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBackground = new javax.swing.JPanel();
        jTitle = new javax.swing.JLabel();
        jInputMonth = new javax.swing.JTextField();
        jInputYear = new javax.swing.JTextField();
        jInputDay = new javax.swing.JTextField();
        jDay = new javax.swing.JLabel();
        jMonth = new javax.swing.JLabel();
        jYear = new javax.swing.JLabel();
        jCheck = new javax.swing.JButton();
        jClear = new javax.swing.JButton();
        jLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jBackground.setBackground(new java.awt.Color(255, 255, 255));

        jTitle.setBackground(new java.awt.Color(255, 255, 255));
        jTitle.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jTitle.setForeground(new java.awt.Color(51, 153, 255));
        jTitle.setText("Date Time Checker");

        jInputMonth.setBackground(new java.awt.Color(255, 255, 255));
        jInputMonth.setForeground(new java.awt.Color(0, 0, 0));
        jInputMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInputMonthActionPerformed(evt);
            }
        });

        jInputYear.setBackground(new java.awt.Color(255, 255, 255));
        jInputYear.setForeground(new java.awt.Color(0, 0, 0));
        jInputYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInputYearActionPerformed(evt);
            }
        });

        jInputDay.setBackground(new java.awt.Color(255, 255, 255));
        jInputDay.setForeground(new java.awt.Color(0, 0, 0));
        jInputDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInputDayActionPerformed(evt);
            }
        });

        jDay.setBackground(new java.awt.Color(255, 255, 255));
        jDay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jDay.setForeground(new java.awt.Color(0, 0, 0));
        jDay.setText("Day");

        jMonth.setBackground(new java.awt.Color(255, 255, 255));
        jMonth.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMonth.setForeground(new java.awt.Color(0, 0, 0));
        jMonth.setText("Month");

        jYear.setBackground(new java.awt.Color(255, 255, 255));
        jYear.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jYear.setForeground(new java.awt.Color(0, 0, 0));
        jYear.setText("Year");

        jCheck.setBackground(new java.awt.Color(204, 204, 204));
        jCheck.setForeground(new java.awt.Color(0, 0, 0));
        jCheck.setText("Check");
        jCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckMouseClicked(evt);
            }
        });
        jCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckActionPerformed(evt);
            }
        });

        jClear.setBackground(new java.awt.Color(204, 204, 204));
        jClear.setForeground(new java.awt.Color(0, 0, 0));
        jClear.setText("Clear");
        jClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jClearMouseClicked(evt);
            }
        });
        jClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jBackgroundLayout = new javax.swing.GroupLayout(jBackground);
        jBackground.setLayout(jBackgroundLayout);
        jBackgroundLayout.setHorizontalGroup(
            jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBackgroundLayout.createSequentialGroup()
                .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jBackgroundLayout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jBackgroundLayout.createSequentialGroup()
                            .addGap(66, 66, 66)
                            .addComponent(jTitle))
                        .addGroup(jBackgroundLayout.createSequentialGroup()
                            .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jBackgroundLayout.createSequentialGroup()
                                    .addGap(118, 118, 118)
                                    .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jMonth)
                                        .addComponent(jDay))
                                    .addGap(26, 26, 26))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBackgroundLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jYear)
                                    .addGap(18, 18, 18)))
                            .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jInputYear, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jInputMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jInputDay, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jBackgroundLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jClear, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jBackgroundLayout.setVerticalGroup(
            jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBackgroundLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTitle)
                .addGap(30, 30, 30)
                .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBackgroundLayout.createSequentialGroup()
                        .addComponent(jInputDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jInputMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jInputYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jYear)))
                    .addGroup(jBackgroundLayout.createSequentialGroup()
                        .addComponent(jDay)
                        .addGap(27, 27, 27)
                        .addComponent(jMonth)))
                .addGap(41, 41, 41)
                .addGroup(jBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jClear)
                    .addComponent(jCheck))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jClearActionPerformed

    private void jCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckActionPerformed

    private void jInputDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInputDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jInputDayActionPerformed

    private void jInputYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInputYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jInputYearActionPerformed

    private void jInputMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInputMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jInputMonthActionPerformed

    private void jClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jClearMouseClicked
        // TODO add your handling code here:
        jInputDay.setText("");
//        jInputMonth.setText("");
        jInputYear.setText("");
    }//GEN-LAST:event_jClearMouseClicked

    private void jCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckMouseClicked
        // TODO add your handling code here:
        Integer day;
        Integer month;
        Integer year;

        try {
            day = Integer.parseInt(jInputDay.getText().trim());
            if (day < 1 || day > 31) {
                message = "Input data for Day is out of range!";
                errorMessage(message);
                return;
            }
        } catch (NumberFormatException e) {
            message = "Input data for Day is incorrect format!";
            errorMessage(message);
            return;
        }
        try {
            month = Integer.parseInt(jInputMonth.getText().trim());
            if (month < 1 || month > 12) {
                message = "Input data for Month is out of range!";
                errorMessage(message);
                return;
            }
        } catch (NumberFormatException e) {
            message = "Input data for Month is incorrect format!";
            errorMessage(message);
            return;
        }
        try {
            year = Integer.parseInt(jInputYear.getText().trim());
            if (year < 1000 || year > 3000) {
                message = "Input data for Year is out of range!";
                errorMessage(message);
                return;
            }
        } catch (NumberFormatException e) {
            message = "Input data for Year is incorrect format!";
            errorMessage(message);
            return;
        }
        try {
            message = message(day, month, year);
        } catch (Exception ex) {
            Logger.getLogger(Form1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jCheckMouseClicked

    private void errorMessage(String error) {
        JOptionPane.showMessageDialog(null, error, "Error", JOptionPane.OK_OPTION);
    }

    private String message(int day, int month, int year) throws Exception {
        String format = String.valueOf(day) + "/" + String.valueOf(month) + "/" + String.valueOf(year) + " ";
        message = "";
        if (isValidDate(day, month, year)) {
            message = format + "is correct date time!";
            JOptionPane.showMessageDialog(null, message, "Message", JOptionPane.INFORMATION_MESSAGE);
        } else {
            message = format + "is NOT correct date time!";
            JOptionPane.showMessageDialog(null, message, "Message", JOptionPane.INFORMATION_MESSAGE);
        }
        return message;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jBackground;
    private javax.swing.JButton jCheck;
    private javax.swing.JButton jClear;
    private javax.swing.JLabel jDay;
    private javax.swing.JTextField jInputDay;
    private javax.swing.JTextField jInputMonth;
    private javax.swing.JTextField jInputYear;
    private javax.swing.JLabel jLogo;
    private javax.swing.JLabel jMonth;
    private javax.swing.JLabel jTitle;
    private javax.swing.JLabel jYear;
    // End of variables declaration//GEN-END:variables
}
